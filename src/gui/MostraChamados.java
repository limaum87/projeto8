/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;
import dao.EmpresaDAO;
import dao.AreaDAO;
import dao.ChamadoDAO;
import dao.AssentamentoDAO;
import dao.MuralDAO;
import dao.UsuarioDAO;
import java.awt.CardLayout;
import java.sql.*;
import java.util.Iterator;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import modelo.Empresa;
import modelo.Area;
import modelo.Chamado;
import modelo.Assentamento;
import modelo.Usuario;
import gui.login;
import javax.swing.JTable;
import modelo.Mural;

/**
 *
 * @author felipe
 */
public class MostraChamados extends javax.swing.JPanel {
     private ResultSet resultado;
     private ResultSet resultadoa;
     public static String numeroos="0";
     public static String clienteos;
     public static String areaos;
     public static String descricaoos;
     public static String solucaoos;
     public static Long nros;
     public static Integer flag=0;
    /**
     * Creates new form MostraChamados
     */
    public MostraChamados() {
       
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel6 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(852, 800));

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Numero OS", "Descrição", "Cliente", "Status", "Solução", "Data Abertura"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable2.setAutoCreateRowSorter(true);
        DefaultTableModel modelo2 = (DefaultTableModel) jTable2.getModel();
        UsuarioDAO ha = new UsuarioDAO();
        Usuario usuarioa = new Usuario();
        Chamado chamadosa = new Chamado();
        usuarioa.setEmail(login.getUsuariologado());
        chamadosa.setId_usuario(ha.ConsultaId(usuarioa));
        ChamadoDAO fa = new ChamadoDAO();
        resultadoa=fa.ChamadosdoUsuario(chamadosa);
        try {
            while (resultadoa.next()){
                modelo2.addRow(new String [] {resultadoa.getString(1),resultadoa.getString(4),resultadoa.getString(2),resultadoa.getString(3),resultadoa.getString(5),resultadoa.getString(6)});
            }
        } catch (SQLException ex) {
            System.out.println(" Erro ao adicionar linha: ");
        }
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(jTable2);
        jTable2.getColumnModel().getColumn(0).setMinWidth(50);
        jTable2.getColumnModel().getColumn(0).setPreferredWidth(5);
        jTable2.getColumnModel().getColumn(0).setMaxWidth(50);
        jTable2.getColumnModel().getColumn(1).setPreferredWidth(15);
        jTable2.getColumnModel().getColumn(2).setPreferredWidth(5);
        jTable2.getColumnModel().getColumn(3).setMinWidth(100);
        jTable2.getColumnModel().getColumn(3).setMaxWidth(100);

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gui/icones/1361253227_task_completed.png"))); // NOI18N
        jButton3.setMnemonic('f');
        jButton3.setToolTipText("Finalizar Chamado");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gui/icones/1361252888_mail-replied.png"))); // NOI18N
        jButton2.setMnemonic('s');
        jButton2.setToolTipText("Encaminhar Chamado");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        UsuarioDAO h = new UsuarioDAO();
        Usuario usuario = new Usuario();
        usuario.setEmail(login.getUsuariologado());
        resultado=h.ConsultaEmail(usuario);
        try {
            while (resultado.next()){
                jLabel2.setText("Olá " +resultado.getString(1));
            }
        } catch (SQLException ex) {
            System.out.println(" Erro ao consultar empresa: ");
        }

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gui/icones/Edittext.png"))); // NOI18N
        jButton1.setMnemonic('e');
        jButton1.setToolTipText("Editar Chamado");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Numero OS", "Descrição", "Cliente", "Status", "Solução", "Data Abertura"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setAutoCreateRowSorter(true);
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();

        ChamadoDAO f = new ChamadoDAO();
        resultado=f.ChamadosAbertos();
        try {
            while (resultado.next()){
                modelo.addRow(new String [] {resultado.getString(1),resultado.getString(4),resultado.getString(2),resultado.getString(3),resultado.getString(5),resultado.getString(6)});
            }
        } catch (SQLException ex) {
            System.out.println(" Erro ao adicionar linha: ");
        }
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(jTable1);
        jTable1.getColumnModel().getColumn(0).setPreferredWidth(5);
        jTable1.getColumnModel().getColumn(1).setPreferredWidth(15);
        jTable1.getColumnModel().getColumn(2).setPreferredWidth(5);

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel1.setText("Chamados em Aberto");

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel3.setText("Seus Chamados");

        jLabel4.setText("Seus Chamados Abertos:" + jTable2.getRowCount());

        jLabel5.setText("Chamados Abertos:" + jTable1.getRowCount());

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        MuralDAO mud = new MuralDAO();
        resultadoa=mud.CarregaMural();
        try {
            while (resultadoa.next()){
                jTextArea1.setText(resultadoa.getString(1));
            }
        } catch (SQLException ex) {
            System.out.println(" Erro ao adicionar linha: ");
        }
        jScrollPane1.setViewportView(jTextArea1);

        jLabel6.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel6.setText("Mural");

        jButton4.setText("Salvar");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(366, 366, 366)
                                .addComponent(jLabel5))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 754, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 754, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel4)))
                        .addGap(43, 43, 43)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton4))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton3, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton1))
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton4)
                .addContainerGap(279, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        flag=0;
        if(jTable1.getSelectedRow()==-1 && jTable2.getSelectedRow()==-1){
            JOptionPane.showMessageDialog(null, "É necessario selecionar um chamado para poder editar");
        }
        else {
            if (jTable2.getSelectedRow()==-1){
                Chamado chamados = new Chamado();
                int selectedRowIndex = jTable1.getSelectedRow();
                int selectedColumnIndex = jTable1.getSelectedColumn();
                numeroos =  (String) jTable1.getValueAt(selectedRowIndex, 0) ;
                descricaoos =  (String) jTable1.getValueAt(selectedRowIndex, 1) ;
                clienteos = (String) jTable1.getValueAt(selectedRowIndex, 2) ;
                areaos = (String) jTable1.getValueAt(selectedRowIndex, 3) ;
                solucaoos = (String) jTable1.getValueAt(selectedRowIndex, 4) ;
                ModificaChamado mdfchm = new ModificaChamado();
                home.cards.add(mdfchm, "Modifica Chamado");
                CardLayout layout2 = (CardLayout) (home.cards.getLayout());
                layout2.show(home.cards, "Modifica Chamado");
            }
            else{
                Chamado chamados = new Chamado();
                int selectedRowIndex = jTable2.getSelectedRow();
                int selectedColumnIndex = jTable2.getSelectedColumn();
                numeroos =  (String) jTable2.getValueAt(selectedRowIndex, 0) ;
                descricaoos =  (String) jTable2.getValueAt(selectedRowIndex, 1) ;
                clienteos = (String) jTable2.getValueAt(selectedRowIndex, 2) ;
                areaos = (String) jTable2.getValueAt(selectedRowIndex, 3) ;
                solucaoos = (String) jTable2.getValueAt(selectedRowIndex, 4) ;
                ModificaChamado mdfchm = new ModificaChamado();
                home.cards.add(mdfchm, "Modifica Chamado");
                CardLayout layout2 = (CardLayout) (home.cards.getLayout());
                layout2.show(home.cards, "Modifica Chamado");
            }

        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if(jTable1.getSelectedRow()==-1 && jTable2.getSelectedRow()==-1){
            JOptionPane.showMessageDialog(null, "É necessario selecionar um chamado para poder editar");
        }
        else {
            if (jTable2.getSelectedRow()==-1){
                int selectedRowIndex = jTable1.getSelectedRow();
                numeroos =  (String) jTable1.getValueAt(selectedRowIndex, 0) ;
                EncaminhaChamado enccha = new EncaminhaChamado();
                home.cards.add(enccha, "Encaminha Chamado");
                CardLayout layout2 = (CardLayout) (home.cards.getLayout());
                layout2.show(home.cards, "Encaminha Chamado");
            }
            else{
                int selectedRowIndex = jTable2.getSelectedRow();
                numeroos =  (String) jTable2.getValueAt(selectedRowIndex, 0) ;
                EncaminhaChamado enccha = new EncaminhaChamado();
                home.cards.add(enccha, "Encaminha Chamado");
                CardLayout layout2 = (CardLayout) (home.cards.getLayout());
                layout2.show(home.cards, "Encaminha Chamado");
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        flag=1;
        if(jTable1.getSelectedRow()==-1 && jTable2.getSelectedRow()==-1){
            JOptionPane.showMessageDialog(null, "É necessario selecionar um chamado para poder editar");
        }
        else {
            if (jTable2.getSelectedRow()==-1){
                Chamado chamados = new Chamado();
                int selectedRowIndex = jTable1.getSelectedRow();
                int selectedColumnIndex = jTable1.getSelectedColumn();
                numeroos =  (String) jTable1.getValueAt(selectedRowIndex, 0) ;
                descricaoos =  (String) jTable1.getValueAt(selectedRowIndex, 1) ;
                clienteos = (String) jTable1.getValueAt(selectedRowIndex, 2) ;
                areaos = (String) jTable1.getValueAt(selectedRowIndex, 3) ;
                solucaoos = (String) jTable1.getValueAt(selectedRowIndex, 4) ;
                ModificaChamado mdfchm = new ModificaChamado();
                home.cards.add(mdfchm, "Modifica Chamado");
                CardLayout layout2 = (CardLayout) (home.cards.getLayout());
                layout2.show(home.cards, "Modifica Chamado");
            }
            else{
                Chamado chamados = new Chamado();
                int selectedRowIndex = jTable2.getSelectedRow();
                int selectedColumnIndex = jTable2.getSelectedColumn();
                numeroos =  (String) jTable2.getValueAt(selectedRowIndex, 0) ;
                descricaoos =  (String) jTable2.getValueAt(selectedRowIndex, 1) ;
                clienteos = (String) jTable2.getValueAt(selectedRowIndex, 2) ;
                areaos = (String) jTable2.getValueAt(selectedRowIndex, 3) ;
                solucaoos = (String) jTable2.getValueAt(selectedRowIndex, 4) ;
                ModificaChamado mdfchm = new ModificaChamado();
                home.cards.add(mdfchm, "Modifica Chamado");
                CardLayout layout2 = (CardLayout) (home.cards.getLayout());
                layout2.show(home.cards, "Modifica Chamado");
            }

        }

    }//GEN-LAST:event_jButton3ActionPerformed

    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked
      flag=1;   
      if (evt.getClickCount() == 2) {
         JTable target = (JTable)evt.getSource();
         int selectedRowIndex = target.getSelectedRow();
         numeroos =  (String) target.getValueAt(selectedRowIndex, 0) ;
         descricaoos =  (String) target.getValueAt(selectedRowIndex, 1) ;
         clienteos = (String) target.getValueAt(selectedRowIndex, 2) ;
         areaos = (String) target.getValueAt(selectedRowIndex, 3) ;
         solucaoos = (String) target.getValueAt(selectedRowIndex, 4) ;
         ModificaChamado mdfchm = new ModificaChamado();
         home.cards.add(mdfchm, "Modifica Chamado");
         CardLayout layout2 = (CardLayout) (home.cards.getLayout());
         layout2.show(home.cards, "Modifica Chamado");
         
         // do some action
         }
   
    }//GEN-LAST:event_jTable2MouseClicked

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        flag=1;
        if (evt.getClickCount() == 2) {
        JTable target = (JTable)evt.getSource();
         int selectedRowIndex = target.getSelectedRow();
         numeroos =  (String) target.getValueAt(selectedRowIndex, 0) ;
         descricaoos =  (String) target.getValueAt(selectedRowIndex, 1) ;
         clienteos = (String) target.getValueAt(selectedRowIndex, 2) ;
         areaos = (String) target.getValueAt(selectedRowIndex, 3) ;
         solucaoos = (String) target.getValueAt(selectedRowIndex, 4) ;
         ModificaChamado mdfchm = new ModificaChamado();
         home.cards.add(mdfchm, "Modifica Chamado");
         CardLayout layout2 = (CardLayout) (home.cards.getLayout());
         layout2.show(home.cards, "Modifica Chamado");
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        Mural m = new Mural();
        MuralDAO mud = new MuralDAO();
        m.setDescricao(jTextArea1.getText());
        mud.EditaMural(m);
    }//GEN-LAST:event_jButton4ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
